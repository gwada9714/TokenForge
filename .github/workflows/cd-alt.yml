# Alternative CD workflow with different syntax for secrets
name: CD (Alternative)

on:
  # This is a demonstration workflow, not meant to be triggered
  workflow_dispatch:

env:
  AWS_REGION: eu-west-1
  STAGING_API_URL: https://api-staging.tokenforge-app.com
  STAGING_BLOCKCHAIN_NETWORK: testnet
  STAGING_S3_BUCKET: tokenforge-staging
  STAGING_CLOUDFRONT_ID: E1ABCDEFGHIJKL
  PRODUCTION_API_URL: https://api.tokenforge.io
  PRODUCTION_BLOCKCHAIN_NETWORK: mainnet
  PRODUCTION_S3_BUCKET: tokenforge-production
  PRODUCTION_CLOUDFRONT_ID: E2ABCDEFGHIJKL

jobs:
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build
        env:
          VITE_API_URL: ${{ env.STAGING_API_URL }}
          VITE_BLOCKCHAIN_NETWORK: ${{ env.STAGING_BLOCKCHAIN_NETWORK }}

      # Alternative approach using environment files
      - name: Create AWS credentials file
        run: |
          echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> $GITHUB_ENV
          echo "AWS_REGION=${{ env.AWS_REGION }}" >> $GITHUB_ENV

      - name: Deploy to S3
        run: aws s3 sync dist/ s3://${{ env.STAGING_S3_BUCKET }} --delete

      - name: Invalidate CloudFront cache
        run: aws cloudfront create-invalidation --distribution-id ${{ env.STAGING_CLOUDFRONT_ID }} --paths "/*"

      - name: Notify deployment
        if: env.SLACK_WEBHOOK_URL != ''
        run: |
          curl -X POST -H "Content-Type: application/json" \
            -d '{"text":"ðŸš€ Staging deployment completed for TokenForge v${{ github.sha }}"}' \
            $SLACK_WEBHOOK_URL
